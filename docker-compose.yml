version: '3.7'
services:
  socket_proxy:
    image: tecnativa/docker-socket-proxy:latest
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - socket_proxy

  traefik:
    image: traefik:v2.6
    restart: unless-stopped
    command:
      # Entrypoints configuration
      - --entrypoints.web.address=:80
      # Docker provider configuration
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      # Use the secure docker socket proxy
      - --providers.docker.endpoint=tcp://socket_proxy:2375
      # Default docker network to use for connections to all containers
      - --providers.docker.network=traefik_public
      # Logging levels are DEBUG, PANIC, FATAL, ERROR, WARN, and INFO.
      - --log.level=warn
      - --api.insecure=true
    ports:
      - '80:80'
      - '8080:8080'
    networks:
      - traefik_public
      - socket_proxy
    depends_on:
      - socket_proxy

  whoami:
    image: traefik/whoami:v1.7.1
    labels:
      - traefik.enable=true
      - traefik.http.routers.whoami_route.entrypoints=web
      - traefik.http.routers.whoami_route.rule=Host(`whoami.docker.localhost`)
      - traefik.http.routers.whoami_route.service=whoami_service
      - traefik.http.services.whoami_service.loadbalancer.server.port=80
    networks:
      - traefik_public

  frontend:
    restart: unless-stopped
    build:
      context: frontend/
      dockerfile: Dockerfile.dev
    ports:
      - '3000:3000'
    labels:
      - traefik.enable=true
      - traefik.http.routers.whoami_route.entrypoints=web
      - traefik.http.routers.whoami_route.rule=Host(`next.docker.localhost`)
      - traefik.http.routers.whoami_route.service=next_service
      - traefik.http.services.next_service.loadbalancer.server.port=3000
    volumes:
      - ./frontend:/app/
      - /app/node_modules
      - /app/.next
    networks:
      - traefik_public

  ping:
    restart: unless-stopped
    build: 
      context: backend/ping
    ports:
      - '5000:5000'
    networks:
      - traefik_public
    labels:
      - traefik.enable=true
      - traefik.http.routers.whoami_route.entrypoints=web
      - traefik.http.routers.whoami_route.rule=Host(`backend.docker.localhost`)
      - traefik.http.routers.whoami_route.service=next_service
      - traefik.http.services.next_service.loadbalancer.server.port=80
    networks:
      - traefik_public

networks:
  traefik_public:
    external: true
  socket_proxy:
    external: true
